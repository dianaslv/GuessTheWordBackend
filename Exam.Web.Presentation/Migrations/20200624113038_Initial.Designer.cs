// <auto-generated />
using System;
using Exam.Web.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Exam.Web.Presentation.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200624113038_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Exam.Web.Core.Models.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoundId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("RoundId")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Exam.Web.Core.Models.Entities.CorrectResponses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Values")
                        .HasColumnType("longtext CHARACTER SET latin1");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("CorrectResponses");
                });

            modelBuilder.Entity("Exam.Web.Core.Models.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<byte>("State")
                        .HasColumnType("tinyint unsigned");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Exam.Web.Core.Models.Entities.Response", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("RoundId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Value")
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("RoundId");

                    b.HasIndex("StudentId");

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("Exam.Web.Core.Models.Entities.Round", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("GameId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("Exam.Web.Core.Models.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Exam.Web.Core.Models.Entities.StudentToGame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("GameId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentToGames");
                });

            modelBuilder.Entity("Exam.Web.Core.Models.Entities.Category", b =>
                {
                    b.HasOne("Exam.Web.Core.Models.Entities.Round", "Round")
                        .WithOne("Category")
                        .HasForeignKey("Exam.Web.Core.Models.Entities.Category", "RoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Exam.Web.Core.Models.Entities.CorrectResponses", b =>
                {
                    b.HasOne("Exam.Web.Core.Models.Entities.Category", "Category")
                        .WithMany("CorrectResponses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Exam.Web.Core.Models.Entities.Response", b =>
                {
                    b.HasOne("Exam.Web.Core.Models.Entities.Round", "Round")
                        .WithMany("Responses")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exam.Web.Core.Models.Entities.Student", "Student")
                        .WithMany("Responses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Exam.Web.Core.Models.Entities.Round", b =>
                {
                    b.HasOne("Exam.Web.Core.Models.Entities.Game", "Game")
                        .WithMany("Rounds")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Exam.Web.Core.Models.Entities.StudentToGame", b =>
                {
                    b.HasOne("Exam.Web.Core.Models.Entities.Game", "Game")
                        .WithMany("StudentToGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exam.Web.Core.Models.Entities.Student", "Student")
                        .WithMany("StudentToGames")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
